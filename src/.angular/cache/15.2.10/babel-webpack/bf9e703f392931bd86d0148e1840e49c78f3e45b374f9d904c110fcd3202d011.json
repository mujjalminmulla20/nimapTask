{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommonService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.message = new BehaviorSubject(null);\n    this.currentMessage = this.message.asObservable();\n  }\n  // Method to send data to the BehaviorSubject\n  sendDataService(data) {\n    // Emit the new data to all subscribers\n    this.message.next(data);\n  }\n  // Method to retrieve data from the BehaviorSubject\n  getDtService() {\n    return this.currentMessage;\n  }\n  // Method to fetch data from an API endpoint\n  getApi() {\n    return this.httpClient.get('http://localhost:3000/userData');\n  }\n  // Method to send data to an API endpoint\n  sendDtApi(data) {\n    console.log(data);\n    return this.httpClient.post('http://localhost:3000/userData', data);\n  }\n  // Method to delete data from an API endpoint\n  deleteDataApi(id) {\n    return this.httpClient.delete('http://localhost:3000/userData/' + id);\n  }\n  // Method to update data at an API endpoint\n  upDateDataApi(data) {\n    return this.httpClient.put('http://localhost:3000/userData/' + data.id, data);\n  }\n  static #_ = this.ɵfac = function CommonService_Factory(t) {\n    return new (t || CommonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommonService,\n    factory: CommonService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AA8EA,SAASA,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHvB,YAAO,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;IACxC,mBAAc,GAAG,IAAI,CAACI,OAAO,CAACC,YAAY,EAAE;EAEL;EAE9C;EACAC,eAAe,CAACC,IAAS;IACvB;IACA,IAAI,CAACH,OAAO,CAACI,IAAI,CAACD,IAAI,CAAC;EACzB;EAEA;EACAE,YAAY;IACV,OAAO,IAAI,CAACC,cAAc;EAC5B;EAEA;EACAC,MAAM;IACJ,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAAC,gCAAgC,CAAC;EAC9D;EAEA;EACAC,SAAS,CAACN,IAAS;IACjBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjB,OAAO,IAAI,CAACJ,UAAU,CAACa,IAAI,CAAC,gCAAgC,EAAET,IAAI,CAAC;EACrE;EAEA;EACAU,aAAa,CAACC,EAAO;IACnB,OAAO,IAAI,CAACf,UAAU,CAACgB,MAAM,CAAC,iCAAiC,GAAGD,EAAE,CAAC;EACvE;EAEA;EACAE,aAAa,CAACb,IAAS;IACrB,OAAO,IAAI,CAACJ,UAAU,CAACkB,GAAG,CAAC,iCAAiC,GAAGd,IAAI,CAACW,EAAE,EAAEX,IAAI,CAAC;EAC/E;EAAC;qBArCUN,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAqB,SAAbrB,aAAa;IAAAsB,YAFZ;EAAM","names":["BehaviorSubject","CommonService","constructor","httpClient","message","asObservable","sendDataService","data","next","getDtService","currentMessage","getApi","get","sendDtApi","console","log","post","deleteDataApi","id","delete","upDateDataApi","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\l\\OneDrive\\Desktop\\company\\mywork\\src\\app\\common.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { BehaviorSubject } from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class CommonService {\n\n// public massage= new BehaviorSubject(0)\n//   public currentMessage =this.massage.asObservable()\n\n\n\n\n\n  \n//   constructor( private serv1 :HttpClient) { }\n\n\n\n\n//   sendDataService(dt:any){\n//     return this.massage.next(dt)\n\n//   }\n\n\n//   getDtService(){\n//     return this.currentMessage\n//   }\n\n  \n//   getApi(){\n//     return this.serv1.get('http://localhost:3000/userData');\n//   }\n\n\n\n//   sendDtApi(data:any) {\n//     console.log(data)\n   \n\n//    return this.serv1.post('http://localhost:3000/userData',data);\n\n//   }\n//   deleteDataApi(id:any){\n//     return this.serv1.delete('http://localhost:3000/userData'+id)\n//   }\n\n  \n// upDateDataApi(data:any){\n//   return this.serv1.put('http://localhost:3000/userData'+data. id ,data)\n// } \n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  public message = new BehaviorSubject<any>(null);\n  public currentMessage = this.message.asObservable();\n\n  constructor(private httpClient: HttpClient) { }\n\n  // Method to send data to the BehaviorSubject\n  sendDataService(data: any) {\n    // Emit the new data to all subscribers\n    this.message.next(data);\n  }\n\n  // Method to retrieve data from the BehaviorSubject\n  getDtService() {\n    return this.currentMessage;\n  }\n\n  // Method to fetch data from an API endpoint\n  getApi() {\n    return this.httpClient.get('http://localhost:3000/userData');\n  }\n\n  // Method to send data to an API endpoint\n  sendDtApi(data: any) {\n    console.log(data);\n    return this.httpClient.post('http://localhost:3000/userData', data);\n  }\n\n  // Method to delete data from an API endpoint\n  deleteDataApi(id: any) {\n    return this.httpClient.delete('http://localhost:3000/userData/' + id);\n  }\n\n  // Method to update data at an API endpoint\n  upDateDataApi(data: any) {\n    return this.httpClient.put('http://localhost:3000/userData/' + data.id, data);\n  } \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}